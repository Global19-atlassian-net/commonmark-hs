* TODO header_attributes
x Change naming, also internally, to heading_attributes?
_ Implement for setext headers too
_ Add full tests
_ Modify monoid so that we replace something with same name
  instead of appending?
* TODO create a sample markdown linter
do a specific transformation on semantically identified
text (e.g. capitalization)
without changing anything else about the source text.
* TODO example roff man writer
In roff, the effect of an 'emph' might
be `\f[I]`, but it might be `\f[BI]` (if we're already in a
boldface section).  The current setup gives us no way to be
context-sensitive in this way.  If, instead of a function 'emph',
we emitted something we could pattern match on -- say,
`(Emph, ...)`, producing a kind of AST, then we'd be able to
handle this.

Solution: make the IsInline type for roff be a newtype
embeddding State EmphState Builder or something like
that.  Then the effect can be state dependenet.

Would it make sense to do this for footnotes instead of
including the ad hoc after document thing?
* TODO extensions
** TODO attributes (link/image/code/codeblock/header)
- [ ] attribute parser
- [ ] for header, parse inlines
** TODO bracketed spans
** TODO code_identifiers
** TODO fenced divs
** TODO raw attribute
** TODO auto_identifiers (headers)
** TODO grid tables
* TODO documentation
** TODO example of creating instances for roff man
** TODO example of modifying existing HTML output
** TODO example of adding an inline parser: abbreviations?
* TODO reduce memory usage, increase performance

