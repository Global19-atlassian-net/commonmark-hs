* TODO create a sample markdown linter
do a specific transformation on semantically identified
text (e.g. capitalization)
without changing anything else about the source text.
* TODO example roff man writer
In roff, the effect of an 'emph' might
be `\f[I]`, but it might be `\f[BI]` (if we're already in a
boldface section).  The current setup gives us no way to be
context-sensitive in this way.  If, instead of a function 'emph',
we emitted something we could pattern match on -- say,
`(Emph, ...)`, producing a kind of AST, then we'd be able to
handle this.

Solution: make the IsInline type for roff be a newtype
embeddding State EmphState Builder or something like
that.  Then the effect can be state dependenet.

Would it make sense to do this for footnotes instead of
including the ad hoc after document thing?
* TODO extensions
** DONE code block attributes
** DONE code span attributes
** DONE raw attribute - span
** TODO bracketed spans
** TODO fenced divs
** TODO generic attributes
AFTER every inline
BEFORE every block
** TODO fancy_lists
** TODO example_lists
** TODO emoji
** TODO auto_identifiers (final-pass transformation)
** TODO implicit_header_references
** TODO implicit_figures
** TODO line_blocks
** TODO subscript
** TODO superscript
** TODO task_lists
** TODO yaml_metadata_block
maybe in a separate package?
** TODO pandoc_title_block
** TODO citations
** TODO simple tables
** TODO multiline tables
** TODO grid tables
* TODO documentation
** TODO example of creating instances for roff man
** TODO example of modifying existing HTML output
** TODO example of adding an inline parser: abbreviations?
* TODO reduce memory usage, increase performance

