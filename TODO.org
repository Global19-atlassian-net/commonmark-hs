** TODO make Attributes first-class citizens?
I don't see another clean way to make them work in ref link defns.
Best approach is to have a configurable attribute parser, perhaps
as part of the spec.  It can be set to mzero for the default.
* TODO create a sample markdown linter
do a specific transformation on semantically identified
text (e.g. capitalization)
without changing anything else about the source text.
* TODO example roff man writer
In roff, the effect of an 'emph' might
be `\f[I]`, but it might be `\f[BI]` (if we're already in a
boldface section).  The current setup gives us no way to be
context-sensitive in this way.  If, instead of a function 'emph',
we emitted something we could pattern match on -- say,
`(Emph, ...)`, producing a kind of AST, then we'd be able to
handle this.

Solution: make the IsInline type for roff be a newtype
embeddding State EmphState Builder or something like
that.  Then the effect can be state dependenet.

Would it make sense to do this for footnotes instead of
including the ad hoc after document thing?
* TODO extensions
** TODO code block attributes
** TODO code span attributes
** TODO image and link attributes
** TODO bracketed spans
** TODO raw attribute
** TODO fenced divs
** TODO citations
** TODO simple tables
** TODO multiline tables
** TODO grid tables
* TODO documentation
** TODO example of creating instances for roff man
** TODO example of modifying existing HTML output
** TODO example of adding an inline parser: abbreviations?
* TODO reduce memory usage, increase performance

